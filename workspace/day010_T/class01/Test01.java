package class01;

public class Test01 {

	public static void main(String[] args) {
		
		// 코드의 기본 틀
		// 1. 가독성
		// 2. 성능 : 코드 깊이, scope, 변수의 개수, ...
		// 3. 모듈화
		
		// 코드를 작성하는 순서
		// 1. 설계 : 어떤 기능이 있는 프로그램을 만들지에 대한 설명
		//          CRUD
		// 2. 데이터 명세 : 속성(멤버변수) 정의
		//                ERD
		// 3. 한글코딩
		// 4. 코딩
		// 5. 유효성 검사
		// 6. 모듈화
		
		// 연산자 우선순위
		// 디버깅표
		// 제어문 : 조건문 / 반복문(while,for)
		// 배열 : 최대값 찾기 알고리즘(로직)
		//      서로 관련된 데이터
		//      자료형이 같은 데이터
		//      저장할 데이터의 개수를 정확히 알고있어야함
		// 함수 : 메서드 시그니쳐(input,output,기능)
		//      → 새로운 함수 xxxxx 수업때 다룬 코드만 !
		
		// JAVA 객체지향프로그래밍 OOP
		// 클래스 Class JAVA의 기본단위
		// 클래스 객체=new 생성자(); : 객체화 인스턴스화
		// 객체들끼리는 멤버변수값을 서로 공유 xxx
		// 피카츄.공격(); 백만볼트
		// 꼬부기.공격(); 물대포
		//  ▶ 다형성 실현
		//  ▶ OOP의 특징 : 함수(메서드)에게 주어가 생기는 것
		// 상속에서, 오버라이딩(메서드 재정의)
		//    VS 오버로딩(함수명 중복정의 허용)
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	}

}
